<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://felipe-gomes-miyazato.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://felipe-gomes-miyazato.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2023-09-30T17:36:48+00:00</updated><id>https://felipe-gomes-miyazato.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Pipelines de dados com monitoramento na AWS</title><link href="https://felipe-gomes-miyazato.github.io/blog/2023/sidebar-table-of-contents/" rel="alternate" type="text/html" title="Pipelines de dados com monitoramento na AWS"/><published>2023-09-30T00:00:00+00:00</published><updated>2023-09-30T00:00:00+00:00</updated><id>https://felipe-gomes-miyazato.github.io/blog/2023/sidebar-table-of-contents</id><content type="html" xml:base="https://felipe-gomes-miyazato.github.io/blog/2023/sidebar-table-of-contents/"><![CDATA[<p>Este post mostra como construir e viabilizar um bom gerenciamento de pipeline de dados utilizando serviços serverless da AWS.</p> <h2 id="parte-1-coletando-dados">Parte 1: Coletando dados</h2> <p>Requisitos:</p> <ul> <li>Conta AWS</li> <li>Conta kaggle</li> </ul> <p>Conteúdo: demostração de contrução de uma função AWS Lambda que transfere dados do kaggle para um bucket S3.</p> <h3 id="provisionando-lambda">Provisionando Lambda</h3> <p>Esta Lambda age apenas como uma proxy, para disponibilizar os dados em um bucket S3. Para provisionar bastam as configurações padrão, neste caso com Python runtime.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Captura%20de%20tela%202023-09-30%20114229-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Captura%20de%20tela%202023-09-30%20114229-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Captura%20de%20tela%202023-09-30%20114229-1400.webp"/> <img src="/assets/img/Captura%20de%20tela%202023-09-30%20114229.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h3 id="código-e-configuração-da-lambda">Código e configuração da Lambda</h3> <figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="n">os</span>
<span class="kn">import</span> <span class="n">requests</span>
<span class="kn">import</span> <span class="n">boto3</span>
<span class="kn">from</span> <span class="n">botocore.exceptions</span> <span class="kn">import</span> <span class="n">NoCredentialsError</span>

<span class="k">def</span> <span class="nf">lambda_handler</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">context</span><span class="p">):</span>
    <span class="c1"># Get the Kaggle dataset URL and bucket name from the event object
</span>    <span class="n">kaggle_dataset_url</span> <span class="o">=</span> <span class="n">event</span><span class="p">[</span><span class="sh">'</span><span class="s">kaggle_dataset_url</span><span class="sh">'</span><span class="p">]</span>
    <span class="n">bucket_name</span> <span class="o">=</span> <span class="n">event</span><span class="p">[</span><span class="sh">'</span><span class="s">bucket_name</span><span class="sh">'</span><span class="p">]</span>

    <span class="c1"># Get the Kaggle username and key from environment variables
</span>    <span class="n">kaggle_info</span> <span class="o">=</span> <span class="p">{</span>
        <span class="sh">'</span><span class="s">username</span><span class="sh">'</span><span class="p">:</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">username</span><span class="sh">'</span><span class="p">),</span>
        <span class="sh">'</span><span class="s">key</span><span class="sh">'</span><span class="p">:</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">'</span><span class="s">key</span><span class="sh">'</span><span class="p">)</span>
    <span class="p">}</span>

    <span class="c1"># Make the GET request
</span>    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">kaggle_dataset_url</span><span class="p">,</span> <span class="n">auth</span><span class="o">=</span><span class="p">(</span><span class="n">kaggle_info</span><span class="p">[</span><span class="sh">'</span><span class="s">username</span><span class="sh">'</span><span class="p">],</span> <span class="n">kaggle_info</span><span class="p">[</span><span class="sh">'</span><span class="s">key</span><span class="sh">'</span><span class="p">]))</span>

    <span class="c1"># Check if the request was successful
</span>    <span class="k">if</span> <span class="n">response</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
        <span class="c1"># Write the dataset to a file
</span>        <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="sh">'</span><span class="s">/tmp/dataset.zip</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">wb</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">f</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">content</span><span class="p">)</span>
        
        <span class="c1"># Create an S3 client
</span>        <span class="n">s3</span> <span class="o">=</span> <span class="n">boto3</span><span class="p">.</span><span class="nf">client</span><span class="p">(</span><span class="sh">'</span><span class="s">s3</span><span class="sh">'</span><span class="p">)</span>

        <span class="c1"># Specify the file name
</span>        <span class="n">file_name</span> <span class="o">=</span> <span class="sh">'</span><span class="s">dataset.zip</span><span class="sh">'</span>

        <span class="c1"># Upload the file to S3
</span>        <span class="k">try</span><span class="p">:</span>
            <span class="n">s3</span><span class="p">.</span><span class="nf">upload_file</span><span class="p">(</span><span class="sh">'</span><span class="s">/tmp/</span><span class="sh">'</span> <span class="o">+</span> <span class="n">file_name</span><span class="p">,</span> <span class="n">bucket_name</span><span class="p">,</span> <span class="n">file_name</span><span class="p">)</span>
            <span class="k">return</span> <span class="p">{</span>
                <span class="sh">'</span><span class="s">statusCode</span><span class="sh">'</span><span class="p">:</span> <span class="mi">200</span><span class="p">,</span>
                <span class="sh">'</span><span class="s">body</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Successfully uploaded dataset to S3 bucket</span><span class="sh">'</span>
            <span class="p">}</span>
        <span class="k">except</span> <span class="nb">FileNotFoundError</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">{</span>
                <span class="sh">'</span><span class="s">statusCode</span><span class="sh">'</span><span class="p">:</span> <span class="mi">404</span><span class="p">,</span>
                <span class="sh">'</span><span class="s">body</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">The file was not found</span><span class="sh">'</span>
            <span class="p">}</span>
        <span class="k">except</span> <span class="n">NoCredentialsError</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">{</span>
                <span class="sh">'</span><span class="s">statusCode</span><span class="sh">'</span><span class="p">:</span> <span class="mi">401</span><span class="p">,</span>
                <span class="sh">'</span><span class="s">body</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Credentials not available</span><span class="sh">'</span>
            <span class="p">}</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="p">{</span>
            <span class="sh">'</span><span class="s">statusCode</span><span class="sh">'</span><span class="p">:</span> <span class="n">response</span><span class="p">.</span><span class="n">status_code</span><span class="p">,</span>
            <span class="sh">'</span><span class="s">body</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Request to Kaggle API failed</span><span class="sh">'</span>
        <span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Captura%20de%20tela%202023-09-30%20122908-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Captura%20de%20tela%202023-09-30%20122908-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Captura%20de%20tela%202023-09-30%20122908-1400.webp"/> <img src="/assets/img/Captura%20de%20tela%202023-09-30%20122908.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Necessário o preenchimento das variáveis de ambiente da lambda com o conteúdo de <code>kaggle.json</code>. Instruções detalhadas disponíveis na documentação da API do kaggle. </div> <p>Configure the test JSON event like:</p> <figure class="highlight"><pre><code class="language-json" data-lang="json"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="p">{</span><span class="w">
  </span><span class="nl">"kaggle_dataset_url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://www.kaggle.com/datasets/aliceadativa/queimadas-brasil-2020/download?datasetVersionNumber=2"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"bucket_name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"seu-nome-bucket"</span><span class="w">
</span><span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Captura%20de%20tela%202023-09-30%20122908-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Captura%20de%20tela%202023-09-30%20122908-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Captura%20de%20tela%202023-09-30%20122908-1400.webp"/> <img src="/assets/img/Captura%20de%20tela%202023-09-30%20122908.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Para usar o pacote requests, há uma <a href="https://github.com/keithrozario/Klayers/tree/master">layer pública disponível</a>. </div> <h2 data-toc-text="Customizing" id="customizing-your-table-of-contents">Customizing Your Table of Contents</h2> <p>If you want to learn more about how to customize the table of contents of your sidebar, you can check the <a href="https://afeld.github.io/bootstrap-toc/">bootstrap-toc</a> documentation. Notice that you can even customize the text of the heading that will be displayed on the sidebar.</p> <h3 id="example-of-sub-heading-2">Example of Sub-Heading 2</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h3 id="example-of-another-sub-heading-2">Example of another Sub-Heading 2</h3> <p>Jean shorts raw denim Vice normcore, art party High Life PBR skateboard stumptown vinyl kitsch. Four loko meh 8-bit, tousled banh mi tilde forage Schlitz dreamcatcher twee 3 wolf moon. Chambray asymmetrical paleo salvia, sartorial umami four loko master cleanse drinking vinegar brunch. <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p>]]></content><author><name></name></author><category term="pt-br"/><category term="serverless"/><category term="dados"/><category term="monitoramento"/><category term="AWS"/><summary type="html"><![CDATA[um exemplo não exaustivo de implementação de processo de ingestão de dados]]></summary></entry></feed>